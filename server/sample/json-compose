#!/usr/bin/env ts-node

// Usage:
//    json-compose commandFile inputFile
//
// Both commandFile and inputFile should be valid JSON. commandFile is read from the filesystem.
// If inputFile is not specified, commandFile is output, unchanged (a simple pass-through).
// If inputFile is specified, its entire contents are inserted as the 'include' property at the top level.
// The JSON files are thus 'composed' into JSON that is sent to the server which may be forwarded to the app.

// TODO this must currently be run from the sample root folder

const fs = require('fs');
const parseArgs = require('minimist');

const commandLineOpts = {
}
const argv = parseArgs(process.argv, commandLineOpts);
const commandFilename = argv._[2];
const inputFilename = argv._[3];

if (commandFilename) {
  const commandJson = fs.readFileSync(commandFilename, 'utf8');
  const command = JSON.parse(commandJson);
  const include = command.params && command.params.include;
  if (include === true && inputFilename) {
    const inputJson = fs.readFileSync(inputFilename, 'utf8');
    const input = JSON.parse(inputJson);
    command.params.include = input;
  } else if (typeof(include) === 'string') {
    command.params.include = JSON.parse(fs.readFileSync(include, 'utf8'));
  }
  const output = JSON.stringify(command);
  console.log(output);
} else {
  const help = `usage:
json-compose commandFile.json inputFile.json
  logs output to console
`;
  console.log(help);
}
